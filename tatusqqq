[1mdiff --git a/backend/sample-data-DynamoDB/insert-restaurant.py b/backend/sample-data-DynamoDB/insert-restaurant.py[m
[1mindex 0a9230e..89fe95a 100644[m
[1m--- a/backend/sample-data-DynamoDB/insert-restaurant.py[m
[1m+++ b/backend/sample-data-DynamoDB/insert-restaurant.py[m
[36m@@ -1,13 +1,13 @@[m
 import boto3[m
 import json[m
[31m-from credentials import *[m
[32m+[m[32m#[m[41m [m
 # Initialize the DynamoDB client[m
 dynamodb = boto3.client([m
     'dynamodb',[m
[31m-    region_name=REGION,[m
[31m-    aws_access_key_id=ACCESS_KEY,[m
[31m-    aws_secret_access_key=SECRET_KEY,[m
[31m-    aws_session_token=SESSION_TOKEN)[m
[32m+[m[32m    region_name='us-east-1',[m
[32m+[m[32m    aws_access_key_id='ASIASIIXJYVQKAZ4UVHI',[m
[32m+[m[32m    aws_secret_access_key='Bmu1K7VlnuSuQSkEoXt5jb05/fQPpejBDwkh3EKv',[m
[32m+[m[32m    aws_session_token='FwoGZXIvYXdzEID//////////wEaDPijykfKv4WHEJXTaSLBAZ+GxGzsXUi8SAgLZqmswqBr+rkD8Gn/bYNmQDk3PvMWsaxLAFH7p03hruaGbz5Ge9TNtCbDVxnKMCM+rqXWHpHrmJGPZ0GaIX48L/VK1h7WKatGKKgdONjZexkDWOS0ieEEU/EhafJKv5mVDBt9JLmUFdijPd4RseuvjbM/tzYNI7Cd9bPCmz6OdWblS6U7eLYBeBlpZvDCCbwRhY5JWXKcoI9TLFENWKdwbQzEoMR8lADE/QSaYrYgQzS7P/8MSgoo3rrhqgYyLbdu5H/vdhJKQrCkLzkYU4pBnZQDPP76kO+BANoL4MAQ+PX0Y/TGRcOnByzaew==')[m
 [m
 file_to_upload = 'restaurant-data.json'[m
 [m
[1mdiff --git a/frontend/src/pages/RestaurantPage/EditRestaurantDetails.jsx b/frontend/src/pages/RestaurantPage/EditRestaurantDetails.jsx[m
[1mindex 9d0fdd6..3108532 100644[m
[1m--- a/frontend/src/pages/RestaurantPage/EditRestaurantDetails.jsx[m
[1m+++ b/frontend/src/pages/RestaurantPage/EditRestaurantDetails.jsx[m
[36m@@ -64,9 +64,10 @@[m [mfunction restaurant() {[m
       alert('Please fill in all mandatory fields.');[m
       return;[m
     }[m
[32m+[m[32m    console.log(restaurant);[m
     let response = await updateRestaurantData(restaurant);[m
     setInEditingMode(false);[m
[31m-    window.location.reload();[m
[32m+[m[32m    // window.location.reload();[m
   };[m
 [m
   async function updateRestaurantData(restaurant) {[m
[36m@@ -454,7 +455,8 @@[m [mfunction restaurant() {[m
                 <Flex>[m
                 <Text p="5px" fontSize="lg" display='inline' width='190px'>Offer Applied On:</Text>[m
                   {inEditingMode && restaurant.is_offer ? ([m
[31m-                    <Select name="offer_on" value={restaurant.offer_on || ""} onChange={(event) => {[m
[32m+[m[32m                    <Select name="offer_on" value={restaurant.offer_on || "none"} onChange={(event) => {[m
[32m+[m[32m                      console.log('sssoasada: ',event.target.value);[m
                       if (event.target.value === 'restaurant') {[m
                         // if discount applied restaurant wide then reset menu_item specifc attributes [m
                         const updatedMenuItems = restaurant.menu.map(item => ({ ...item, offer_on: null, discount_percentage: 0 }));[m
[36m@@ -464,6 +466,7 @@[m [mfunction restaurant() {[m
                         setRestaurant({ ...restaurant, offer_on: event.target.value, discount_percentage: 0 });[m
                       }   [m
                     }}>[m
[32m+[m[32m                      <option value="none">None</option>[m
                       <option value="menu_item">Menu Item specific</option>[m
                       <option value="restaurant">All restaurant items</option>[m
                       </Select>[m
[1mdiff --git a/frontend/src/pages/RestaurantPage/RestaurantDetails.jsx b/frontend/src/pages/RestaurantPage/RestaurantDetails.jsx[m
[1mindex f302c3e..d6ec6ea 100644[m
[1m--- a/frontend/src/pages/RestaurantPage/RestaurantDetails.jsx[m
[1m+++ b/frontend/src/pages/RestaurantPage/RestaurantDetails.jsx[m
[36m@@ -21,7 +21,7 @@[m [mfunction RestaurantDetails() {[m
         setRestaurant(restaurantResponse);[m
         console.log(restaurantResponse);[m
         setLoading(false);[m
[31m-        setMaxDiscount(Math.max(...restaurantResponse.menu.flatMap((menuItem) => menuItem.item_size_price.map((sizePrice) => sizePrice.discount_percentage) )));[m
[32m+[m[32m        setMaxDiscount(Math.max(...restaurantResponse.menu.flatMap((menuItem) => menuItem.item_size_price.map((sizePrice) => parseFloat(sizePrice.discount_percentage)) )));[m
     }[m
     fetchData();[m
 [m
